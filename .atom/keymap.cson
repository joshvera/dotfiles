# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps

'.platform-darwin .atom-workspace':
  'ctrl-o': 'switch-header-source:switch'

'atom-text-editor.vim-mode-plus.normal-mode':
  'ctrl-w k': 'pane:close'
  ':': 'command-palette:toggle'
  'left': 'window:focus-pane-on-left'
  'right': 'window:focus-pane-on-right'
  'up': 'window:focus-pane-up'
  'down': 'window:focus-pane-down'
  'ctrl-shift-f': 'project-find:show'

  ', t': 'haskell-ghc-mod:show-type'

  'cmd-right': 'pane:split-right'
  'cmd-down': 'pane:split-down'
  'cmd-up': 'pane:split-up'
  'cmd-left': 'pane:split-left'
  ', e': 'linter:toggle'

'body atom-text-editor.autocomplete-active':
  'ctrl-p': 'autocomplete-plus:move-up'
  'ctrl-n': 'autocomplete-plus:move-down'

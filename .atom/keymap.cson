# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps

'.platform-darwin .atom-workspace':
  'ctrl-o': 'switch-header-source:switch'

'.platform-darwin .vim-mode-plus.normal-mode':
  'ctrl-c ctrl-f': 'advanced-open-file:toggle'
  ', d': 'merge-conflicts:detect'

'.platform-darwin .vim-mode-plus.insert-mode':
  'ctrl-w': 'editor:delete-to-beginning-of-word'
  # Open file
'atom-text-editor.vim-mode-plus.normal-mode':
  # Command mode
  ':': 'command-palette:toggle'

  # Pane mode
  'ctrl-w k': 'pane:close'
  'left': 'window:focus-pane-on-left'
  'right': 'window:focus-pane-on-right'
  'up': 'window:focus-pane-above'
  'down': 'window:focus-pane-below'

  # Whitespace mode
  'ctrl-cmd-i': 'window:toggle-invisibles'

  # Haskell mode
  ', t': 'haskell-ghc-mod:show-type'
  ', i': 'haskell-ghc-mod:show-info'
  ', g': 'haskell-ghc-mod:go-to-declaration'
  ', o': 'haskell-ghc-mod:insert-type'
  ', s': 'haskell-ghc-mod:sig-fill'

  # Haskell Stack
  ', r': 'ide-haskell-cabal:build'
  ', p': 'ide-haskell-cabal:set-build-target'

  'ctrl-c ctrl-f': 'advanced-open-file:toggle'
  'ctrl-cmd-r': 'window:reload'

  # Linter
  ', e': 'linter:next-error'
  ', w': 'linter:previous-error'

  # Pane Splitting
  'cmd-right': 'pane:split-right'
  'cmd-down': 'pane:split-down'
  'cmd-up': 'pane:split-up'
  'cmd-left': 'pane:split-left'
  'cmd-shift-z': 'pane:reopen-closed-item'

  # nvatom
  'cmd-l': 'nvatom:toggle'
  ', n': 'nvatom:toggle'
  ', l': 'linter:toggle'

  # open-on-github
  'space g o': 'open-on-github:file'
  'space g b': 'open-on-github:blame'
  'space g h': 'open-on-github:history'
  'space g i': 'open-on-github:issues'
  'space g c': 'open-on-github:copy-url'
  'space g r': 'open-on-github:branch-compare'
  'space g g': 'open-on-github:repository'

  # github-diff
  'space g n': 'git-diff:move-to-next-diff'
  'space g p': 'git-diff:move-to-previous-diff'
  'space g d': 'git-diff:toggle-diff-list'

  # surround: ys
  's': 'vim-mode-plus:surround-smart-word'
  'd s': 'vim-mode-plus:delete-surround-any-pair'
  'c s': 'vim-mode-plus:change-surround-any-pair'
  'y s': 'vim-mode-plus:surround'
  'y s w': 'vim-mode-plus:surround-word'
  'y s m': 'vim-mode-plus:map-surround'

  'ctrl-w': 'editor:delete-to-beginning-of-word'

'atom-text-editor.vim-mode-plus.insert-mode':
  'ctrl-s': 'vim-mode-plus:surround-smart-word'

'atom-text-editor.vim-mode-plus.visual-mode':
  's': 'vim-mode-plus:surround'

'atom-text-editor.vim-mode-plus-search':
  'cmd-enter': 'vim-mode-plus-user:project-find-from-search'

'atom-text-editor.vim-mode-plus':
  'ctrl-x 3': 'pane:split-right-and-copy-active-item'
  'ctrl-x 2': 'pane:split-down-and-copy-active-item'
  'ctrl-x 0': 'pane:close'
  # 'w': 'vim-mode-plus:move-to-next-smart-word'
  # 'b': 'vim-mode-plus:move-to-previous-smart-word'
  # 'e': 'vim-mode-plus:move-to-end-of-smart-word'

'body atom-text-editor.autocomplete-active':
  'ctrl-p': 'autocomplete-plus:move-up'
  'ctrl-n': 'autocomplete-plus:move-down'
